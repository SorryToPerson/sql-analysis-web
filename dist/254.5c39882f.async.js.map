{"version":3,"file":"254.5c39882f.async.js","mappings":"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","sources":["webpack://react/./src/pages/home/components/CodeEditor/mock.ts","webpack://react/./src/models/sql.ts","webpack://react/./src/pages/home/components/CodeEditor/index.tsx","webpack://react/./src/pages/home/components/SqlFlow/ReactJsonView.tsx","webpack://react/./src/pages/home/components/SqlFlow/logic.ts","webpack://react/./src/pages/home/components/SqlFlow/SqlFlowView.tsx","webpack://react/./src/pages/home/components/SqlFlow/index.tsx","webpack://react/./src/pages/home/index.tsx"],"sourcesContent":["export const data = `\nwith bx_info_base as\n(\n\tselect a.*\n\t,b.policy_no\n\t,is_renewal_order\n\t,product_form\n\t,issue_date\n\t,cancel_date\n\t,expiry_date\n\tfrom\n\t(\n\t\tselect user_id\n\t\t,max(datetrunc(loan_apply_date,'dd')) as loan_apply_date\n\t\tfrom za_jr_prd.adm_fin_retail_loan_dd\n\t\twhere pt = '{bizdate}000000'\n\t\tand product_code = 'JDZAD'\n\t\tand credit_status = 1\n\t\tgroup by user_id\n\t) a\n\tleft join\n\t(\n\t\tselect user_id\n\t\t,policy_no\n\t\t,is_renewal_order----是否是续保订单Y是N否\n\t\t,product_form----产品:MA/MB/JJ\n\t\t,datetrunc(issue_date,'dd') as issue_date\n\t\t,datetrunc(cancel_date,'dd') as cancel_date\n\t\t,datetrunc(expiry_date,'dd') as expiry_date\n\t\tfrom za_jr_prd.cdm_fin_policy_busi_main_policy_ds\n\t\twhere pt = '{bizdate}000000'\n\t) b\n\ton a.user_id = b.user_id\n)\n\n,bx_info as\n(\n\tselect a.user_id\n\t,a.loan_apply_date\n\t,count(distinct case when a.product_form = 'MB' and a.issue_date < a.loan_apply_date then a.policy_no end) as his_mb_policy_cnt----用户历史持有MB保单数\n\t,count(distinct case when a.product_form = 'MB' and a.issue_date < a.loan_apply_date and (a.cancel_date > a.loan_apply_date\n\t\tor (a.cancel_date is null and a.loan_apply_date <= a.expiry_date)) then a.policy_no end) as cur_mb_policy_cnt----当前在保MB保单数\n\t,count(distinct case when a.product_form = 'JJ' and a.issue_date < a.loan_apply_date then a.policy_no end) as his_jj_policy_cnt----用户历史持有JJ保单数\n\t,count(distinct case when a.product_form = 'JJ' and a.issue_date < a.loan_apply_date and (a.cancel_date > a.loan_apply_date\n\t\tor (a.cancel_date is null and a.loan_apply_date <= a.expiry_date)) then a.policy_no end) as cur_jj_policy_cnt----当前在保JJ保单数\n\t,max(distinct case when a.product_form = 'MB' and a.issue_date < a.loan_apply_date then b.max_installment end) as max_his_mb_installment----历史所有MB保单最长续期期数\n\t,max(distinct case when a.product_form = 'MB' and a.issue_date < a.loan_apply_date and (a.cancel_date > a.loan_apply_date\n\t\tor (a.cancel_date is null and a.loan_apply_date <= a.expiry_date)) then b.max_installment end) as max_cur_mb_installment----当前在保MB保单最长续期期数\n\t,max(distinct case when a.product_form = 'JJ' and a.issue_date < a.loan_apply_date then b.max_installment end) as max_his_jj_installment----历史所有JJ保单最长续期期数\n\t,max(distinct case when a.product_form = 'JJ' and a.issue_date < a.loan_apply_date and (a.cancel_date > a.loan_apply_date\n\t\tor (a.cancel_date is null and a.loan_apply_date <= a.expiry_date)) then b.max_installment end) as max_cur_jj_installment----当前在保JJ保单最长续期期数\n\n\t,count(distinct case when a.product_form = 'MB' and a.is_renewal_order = 'Y' and a.issue_date < a.loan_apply_date then a.policy_no end) as his_mb_renewal_cnt----用户历史MB续保成功次数\n\t,count(distinct case when a.product_form = 'JJ' and a.is_renewal_order = 'Y' and a.issue_date < a.loan_apply_date then a.policy_no end) as his_jj_renewal_cnt----用户历史JJ续保成功次数\n\tfrom bx_info_base a\n\tleft join\n\t(\n\t\tselect a.policy_no --保单号\n\t\t,b.user_id\n\t\t,count(distinct a.installment_no) as max_installment --最长续期期数\n\t\tfrom\n\t\t(\n\t\t\tselect policy_no\n\t\t\t,channel_confirm_date\n\t\t\t,installment_no\n\t\t\tfrom za_jr_prd.adm_fin_policy_renewal_ds --续期表\n\t\t\twhere pt = '{bizdate}000000'\n\t\t\tand is_pay = 1\n\t\t) a\n\t\tjoin bx_info_base b\n\t\ton a.policy_no = b.policy_no and a.channel_confirm_date < b.loan_apply_date\n\t\tgroup by a.policy_no,b.user_id\n\t) b\n\ton a.policy_no = b.policy_no and a.user_id = b.user_id\n\tgroup by a.user_id,a.loan_apply_date\n)\n,corp_info as \n(select user_id \n                 ,policy_nums_jj\n                 ,orig_premium_jj\n                 ,policy_nums_valid_jj\n                 ,policy_nums_value_jj\n                 ,first_insure_date_jj\n                 ,last_insure_date_jj\n                 ,cancel_policy_nums_jj\n                 ,dbtb_cancel_policy_nums_jj\n                 ,rejected_policy_nums_jj\n                 ,parents_policy_nums_jj\n                 ,spouse_policy_nums_jj\n                 ,kids_policy_nums_jj\n                 ,bulk_policy_nums_jj\n                 ,first_re_insure_date_jj\n                 ,last_re_insure_date_jj\n                 ,renewal_policy_nums_jj\n                 ,xb_datediff_jj\n                 ,total_fly_policy_cnt\n                 ,last_365days_fly_policy_cnt\n                 ,last_180days_fly_policy_cnt\n                 ,last_90days_fly_policy_cnt\n                 ,last_30days_fly_policy_cnt\n                 ,last_14days_fly_policy_cnt\n                 ,last_7days_fly_policy_cnt\n                 ,city_phone\n                 ,typejob\n                 ,job_type\n                 ,job_income_level\n                 ,product_category_set\n                 ,policy_nums\n                 ,orig_premium\n                 ,policy_nums_valid\n                 ,policy_nums_value\n                 ,first_insure_date\n                 ,last_insure_date\n                 ,cancel_policy_nums\n                 ,parents_policy_nums\n                 ,spouse_policy_nums\n                 ,kids_policy_nums\n                 ,bulk_policy_nums\n                 ,if_xq_ever\n                 ,first_xq_dt\n                 ,last_xq_dt\n                 ,sum_pay_amt_ever\n                 ,sum_pay_amt_7d\n                 ,sum_pay_amt_30d\n                 ,sum_pay_amt_90d\n                 ,sum_pay_amt_180d\n                 ,max_installment_no\n                 ,min_installment_no\n                 ,sum_installment_no\n                 ,if_xb_ever\n                 ,first_xb_dt\n                 ,last_xb_dt\n                 ,sum_re_premium_ever\n                 ,sum_re_premium_7d\n                 ,sum_re_premium_30d\n                 ,sum_re_premium_90d\n                 ,sum_re_premium_180d\n                 ,xb_datediff\n\t\t\t\t ,loan_apply_date as biz_date \n\t\t  from za_jr_prd.adm_fin_strategy_analysis_creditpre_corpolicy_label_ds\n\t\t  where pt=max_pt('za_jr_prd.adm_fin_strategy_analysis_creditpre_corpolicy_label_ds')\n\t\t  union all \n\t\t  select user_id \n                 ,policy_nums_jj\n                 ,orig_premium_jj\n                 ,policy_nums_valid_jj\n                 ,policy_nums_value_jj\n                 ,first_insure_date_jj\n                 ,last_insure_date_jj\n                 ,cancel_policy_nums_jj\n                 ,dbtb_cancel_policy_nums_jj\n                 ,rejected_policy_nums_jj\n                 ,parents_policy_nums_jj\n                 ,spouse_policy_nums_jj\n                 ,kids_policy_nums_jj\n                 ,bulk_policy_nums_jj\n                 ,first_re_insure_date_jj\n                 ,last_re_insure_date_jj\n                 ,renewal_policy_nums_jj\n                 ,xb_datediff_jj\n                 ,total_fly_policy_cnt\n                 ,last_365days_fly_policy_cnt\n                 ,last_180days_fly_policy_cnt\n                 ,last_90days_fly_policy_cnt\n                 ,last_30days_fly_policy_cnt\n                 ,last_14days_fly_policy_cnt\n                 ,last_7days_fly_policy_cnt\n                 ,city_phone\n                 ,typejob\n                 ,job_type\n                 ,job_income_level\n                 ,product_category_set\n                 ,policy_nums\n                 ,orig_premium\n                 ,policy_nums_valid\n                 ,policy_nums_value\n                 ,first_insure_date\n                 ,last_insure_date\n                 ,cancel_policy_nums\n                 ,parents_policy_nums\n                 ,spouse_policy_nums\n                 ,kids_policy_nums\n                 ,bulk_policy_nums\n                 ,if_xq_ever\n                 ,first_xq_dt\n                 ,last_xq_dt\n                 ,sum_pay_amt_ever\n                 ,sum_pay_amt_7d\n                 ,sum_pay_amt_30d\n                 ,sum_pay_amt_90d\n                 ,sum_pay_amt_180d\n                 ,max_installment_no\n                 ,min_installment_no\n                 ,sum_installment_no\n                 ,if_xb_ever\n                 ,first_xb_dt\n                 ,last_xb_dt\n                 ,sum_re_premium_ever\n                 ,sum_re_premium_7d\n                 ,sum_re_premium_30d\n                 ,sum_re_premium_90d\n                 ,sum_re_premium_180d\n                 ,xb_datediff\n\t\t\t\t ,loan_date as biz_date \n\t\t  from za_jr_prd.adm_fin_strategy_analysis_loanpre_corpolicy_label_ds\n\t\t  where pt=max_pt('za_jr_prd.adm_fin_strategy_analysis_loanpre_corpolicy_label_ds')\n)\n\n\ninsert overwrite table adm_fin_strategy_analysis_userbase partition(pt = '{bizdate}000000')\nselect a.user_id  -- 用户id\n,a.certi_no  -- 身份证号\n,a.phone_no  -- 注册手机号\n,a.gender -- 性别\n,a.birth  -- 出生日期\n,a.cur_age  -- 当前年龄\n,case when d.city rlike '万州' then '重庆'\n\twhen d.city rlike '江汉' then '武汉'\n\twhen d.city rlike '北京|上海|广州|深圳|杭州|苏州|成都|武汉|天津|南京|重庆|长沙|青岛|无锡|大连|宁波|济南|佛山|福州|南通|烟台|合肥|常州|东莞|昆明|长春|太原|郑州|西安|沈阳' then substr(city,1,2)\nelse '其他' end as city  -- 归属城市(gps_city > phone_city > certi_city)\n,case when d.province rlike '内蒙古' then '内蒙古'\n\twhen d.province rlike '黑龙江' then '黑龙江'\n\twhen d.province rlike '中华人民共和国' then '未解析'\nelse substr(province,1,2) end as province  -- 归属省份(gps_city > phone_city > certi_city)\n,case when d.city rlike '北京|上海|广州|深圳|杭州|苏州|成都|武汉|江汉|天津|南京' then '01一线城市'\n\twhen d.city rlike '重庆|万州|长沙|青岛|无锡|大连|宁波|济南|佛山|福州|南通|烟台|合肥|常州|东莞|昆明|长春|太原|郑州|西安|沈阳' then '02二线城市'\n\twhen d.city rlike '厦门|绍兴|南昌|温州|唐山|潍坊|徐州|哈尔滨|嘉兴|贵阳|淄博|台州|扬州|鄂尔多斯|珠海|金华|东营|乌鲁木齐|呼和浩特|威海' then '02二线城市'\n\twhen d.city rlike '石家庄|泉州|盐城|中山|泰州|镇江|济宁|洛阳|廊坊|兰州|泰安|宜昌|襄阳|惠州|芜湖|湖州|保定|包头|株洲|临沂|沧州|淮安|江门|榆林|大庆' then '03三线城市'\n\twhen d.city rlike '邯郸|聊城|漳州|德州|九江|岳阳|滨州|赣州|常德|连云港|衡阳|遵义|咸阳|新乡|许昌|宿迁|菏泽|南阳|枣庄|汕头|湛江' then '03三线城市'\n\twhen d.city rlike '南宁|柳州|茂名|周口|海口|银川|西宁|昆山|江阴|张家港|义乌|吉林|鞍山|宝鸡|绵阳|通辽|松原|安阳|焦作|赤峰|邢台|郴州|平顶山|桂林|肇庆|曲靖' then '04四线城市'\n\twhen d.city rlike '商丘|信阳|驻马店|营口|揭阳|龙岩|安庆|日照|三明|呼伦贝尔|长治|湘潭|德阳|南充|乐山|达州|盘锦|延安' then '04四线城市'\n\twhen d.city rlike '上饶|锦州|宜春|宜宾|张家口|马鞍山|吕梁|抚顺|临汾|渭南|开封|莆田|荆州|黄冈|四平|承德|齐齐哈尔|三门峡|秦皇岛|本溪' then '04四线城市'\n\twhen d.city rlike '玉林|孝感|牡丹江|荆门|宁德|运城|绥化|永州|怀化|黄石|泸州|清远|邵阳|衡水|益阳|丹东|铁岭|晋城|朔州|吉安|娄底|玉溪' then '04四线城市'\n\twhen d.city rlike '辽阳|南平|濮阳|晋中|资阳|都江堰|攀枝花|衢州|内江|滁州|阜阳|十堰|大同|朝阳|六安|宿州|通化|蚌埠|韶关|丽水|自贡|阳江|毕节' then '04四线城市'\n\twhen d.city is null or city rlike '四川省|直辖行政单位|广东省|自治区直辖县级行政区划|海南省|直辖行政单位|云南省|海南行政区|广西壮族自治区|贵州省|省直辖县级行政区划' then '99解析异常'\nelse '05五线城市' end as city_level  -- 城市等级\n,case when pp.ca_id is not null then 1 else 0 end as is_cancel  -- 是否已注销\n,pp.gmt_modified as cancel_time  -- 注销时间\n,d.mp_manufacturer_flag  -- 客户所用手机对应的厂商\n,'' as mp_manufacturer  -- 设备信息,该变量作废\n\n,b.channel_final  -- 渠道类型_激活>归因>注册\n,b.spread_way_final  -- 一级渠道（渠道子类型）_激活>归因>注册\n,b.channel_type_final  -- 二级渠道（渠道名称）_激活>归因>注册\n,b.register_name_final  -- 三级渠道（子渠道名称）_激活>归因>注册\n,b.register_source_final  -- 子渠道编码_激活>归因>注册\n,p.pboc2_edu_level  -- 学历\n,p.pboc2_employer_seg  -- 就业类型\n,p.pboc2_industry  -- 行业信息\n,p.pboc2_marital_state  -- 婚姻状态\n,p.pboc2_occupation  -- 职业信息\n\n,a2.credit_operate_flag  -- 是否额度平移\n,a.register_time  -- 注册时间\n,l.fst_login_time  -- 首次登录APP时间\n,l.lst_login_time  -- 最近一次登录APP时间\n\n,a.is_apply  -- 是否完申\n,a.fst_apply_time  -- 首次完申时间\n,a2.loan_apply_date as lst_apply_time  -- 最近一次完申时间\n,a2.user_back_flag  -- 是否回捞客群 1是 0否\n,a2.is_mid_back  -- 是否中收回捞 1是 0否\n,a2.is_reapply  -- 是否发起拒信重申 1是 0否\n,a.is_credit  -- 是否授信\n,coalesce(a2.flow_score_v2,'空') as flow_score_v2  -- 流量评分v2\n,coalesce(a2.cscore_level,'空') as cscore_level  -- 授信评分\n\n,c.operations_code  -- 贷中风险分层\n,a.cur_left_principal  -- 在贷余额\n,a.is_inloan  -- 是否在贷\n,a.his_overdue_days  -- 历史最大逾期天数\n,a.cur_overdue_days  -- 当前最大逾期天数\n,a.fst_withdraw_date  -- 首次放款时间\n,a.fst_loan_date  -- 首次动支时间\n,hc.max_hc_time as lst_loan_reject_time  -- 最近一次贷中互斥时间\n,hc.min_hc_time as fst_loan_reject_time  -- 首次贷中互斥时间\n\n,a.lst_loan_date  -- 最近一次动支时间\n,a.lst_withdraw_date  -- 最近一次放款时间\n,rp.lst_repayment_date  -- 最近一次还款时间\n,a.loan_cnt  -- 累计借款笔数\n,a2.apply_age as lst_apply_age  -- 最近一次完申时点年龄\n,a.credit_apply_time  -- 授信申请时间\n,a.credit_apply_no  -- 授信通过编号\n,a.credit_approve_time  -- 授信通过时间\n,a.origin_credit_level  -- 原始授信等级\n,a.credit_level  -- 当前授信等级\n,a.origin_credit_irr_rate_12  -- 原始授信定价\n,a.credit_irr_rate_12  -- 当前授信定价\n,a.origin_credit_amount  -- 原始授信额度\n,a.credit_amount  -- 当前授信额度\n,a1.is_longterm_control_group  -- 是否长期对照组\n\n,coalesce(a.credit_amount,0) - coalesce(a.cur_left_principal,0) as usable_amt  -- 剩余可用额度\n,case when cur_age > 54 then '01.54岁以上'\n\twhen cur_age > 50 then '02.51-54岁'\n\twhen cur_age >= 41 then '03.41-50岁'\n\twhen cur_age >= 31 then '04.31-40岁'\n\twhen cur_age >= 24 then '05.24-30岁'\n\twhen cur_age >= 22 then '06.22-23岁'\n\twhen cur_age >= 18 then '07.18-21岁'\nelse '08.其他' end as cur_age_bin  -- 当前年龄段\n,case when a2.apply_age > 54 then '01.54岁以上'\n\twhen a2.apply_age > 50 then '02.51-54岁'\n\twhen a2.apply_age >= 41 then '03.41-50岁'\n\twhen a2.apply_age >= 31 then '04.31-40岁'\n\twhen a2.apply_age >= 24 then '05.24-30岁'\n\twhen a2.apply_age >= 22 then '06.22-23岁'\n\twhen a2.apply_age >= 18 then '07.18-21岁'\nelse '08.其他' end lst_apply_age_bin  -- 最近一次完申时点年龄段\n\n,case when flow_score_v2 is null then '空' \n\twhen flow_score_v2 in ('L01','L02') then '01.超优'\n\twhen flow_score_v2 in ('L03') then '02.优质'\nelse '03.一般' end as flow_score_seg_v2  -- 优质完申标签_v2\n,case when cscore_level is null then '空'\n\twhen cscore_level in ('C1','C2','C3','C4') then '01.超优'\n else '02.一般' end as cscore_seg  -- 超优授信标签\n,case when origin_credit_amount<3000 then '01.(0,3000)'\n\twhen origin_credit_amount<=3000 then '02.(3000,3000]'\n\twhen origin_credit_amount<=5000 then '03.(3000,5000]'\n\twhen origin_credit_amount<=10000 then '04.(5000,10000]'\n\twhen origin_credit_amount<=20000 then '05.(10000,20000]'\n\twhen origin_credit_amount<=30000 then '06.(20000,30000]'\n\twhen origin_credit_amount<=50000 then '07.(30000,50000]'\n\twhen origin_credit_amount>50000 then '08.(50000,+)'\nelse '99others' end as origin_credit_amount_bin  -- 原始授信额度分箱\n,case when credit_amount<3000 then '01.(0,3000)'\n\twhen credit_amount<=3000 then '02.(3000,3000]'\n\twhen credit_amount<=5000 then '03.(3000,5000]'\n\twhen credit_amount<=10000 then '04.(5000,10000]'\n\twhen credit_amount<=20000 then '05.(10000,20000]'\n\twhen credit_amount<=30000 then '06.(20000,30000]'\n\twhen credit_amount<=50000 then '07.(30000,50000]'\n\twhen credit_amount>50000 then '08.(50000,+)'\nelse '99others' end as credit_amount_bin  -- 当前授信额度分箱\n,case when origin_credit_irr_rate_12 is null or origin_credit_irr_rate_12 <= 0.24 then '(0,24%]'\n\twhen origin_credit_irr_rate_12 > 0.24 then '(24%,36%]'\nend origin_credit_irr_bin  -- 原始授信定价分箱\n,case when credit_irr_rate_12 is null or credit_irr_rate_12 <= 0.24 then '(0,24%]'\n\twhen credit_irr_rate_12 > 0.24 then '(24%,36%]'\nend credit_irr_bin  -- 当前授信定价分箱\n\n,datediff(to_date('{bizdate}','yyyymmdd'),register_time_new,'dd') as register_period  -- 注册距今时长\n,case when datediff(to_date('{bizdate}','yyyymmdd'),register_time_new,'mm') = 0 then 1 else 0 end as is_m0_register  -- 是否当月注册\n,datediff(fst_login_time,a.register_time,'dd') as fst_login_reg_period  -- 首次登录APP距注册时长\n,datediff(fst_apply_time,a.register_time,'dd') as fst_apply_reg_period  -- 首次完申距注册时长\n\n,datediff(to_date('{bizdate}','yyyymmdd'),credit_approve_time,'dd') as credit_period  -- 授信距今时长\n,datediff(credit_approve_time,register_time_new,'dd') as credit_reg_period  -- 授信距注册时长\n,case when datediff(to_date('{bizdate}','yyyymmdd'),credit_approve_time,'dd') < 90 then 1 else 0 end as is_credit_in_90d  -- 是否授信90天内\n,case when datediff(to_date('{bizdate}','yyyymmdd'),credit_approve_time,'mm') = 0 then 1 else 0 end as is_m0_credit  -- 是否当月授信\n,datediff(fst_loan_date,credit_approve_time,'dd') as fst_loan_cre_period  -- 首次动支距授信时长\n,datediff(to_date('{bizdate}','yyyymmdd'),lst_withdraw_date,'dd') as lst_withdraw_period  -- 最近一次放款距今时长\n,datediff(to_date('{bizdate}','yyyymmdd'),rp.lst_repayment_date,'dd') as lst_repayment_period  -- 最近一次还款距今时长\n\n,case when is_apply = 0 and datediff(to_date('{bizdate}','yyyymmdd'),register_time_new,'dd') < 30 then '注册未完申(30天内)'\n\twhen is_apply = 0 and datediff(to_date('{bizdate}','yyyymmdd'),register_time_new,'dd') >= 30 then '注册未完申(30天以上)'\n\twhen is_apply = 1 and is_credit = 0 then '授信被拒'\n\twhen is_credit = 1 and fst_loan_date is null and datediff(to_date('{bizdate}','yyyymmdd'),credit_approve_time,'dd') < 30 then '授信未支用(30天内)'\n\twhen is_credit = 1 and fst_loan_date is null and datediff(to_date('{bizdate}','yyyymmdd'),credit_approve_time,'dd') >= 30\n\t\tand datediff(to_date('{bizdate}','yyyymmdd'),credit_approve_time,'dd') <= 90 then '授信未支用(30-90天)'\n\twhen is_credit = 1 and fst_loan_date is null and datediff(to_date('{bizdate}','yyyymmdd'),credit_approve_time,'dd') > 90 then '授信未支用(90天以上)'\n\twhen is_credit = 1 and fst_loan_date is not null and loan_cnt = 0 then '首借被拒'\n\twhen loan_cnt >= 1 and cur_left_principal = 0 and (datediff(to_date('{bizdate}','yyyymmdd'),rp.lst_repayment_date,'dd') <= 30 or rp.lst_repayment_date is null) then '结清户0-30'\n\twhen loan_cnt >= 1 and cur_left_principal = 0 and datediff(to_date('{bizdate}','yyyymmdd'),rp.lst_repayment_date,'dd') >= 31\n\t\tand datediff(to_date('{bizdate}','yyyymmdd'),rp.lst_repayment_date,'dd') <= 90 then '结清31-90'\n\twhen loan_cnt >= 1 and cur_left_principal = 0 and  datediff(to_date('{bizdate}','yyyymmdd'),rp.lst_repayment_date,'dd') >= 91\n\t\tand datediff(to_date('{bizdate}','yyyymmdd'),rp.lst_repayment_date,'dd') <= 180 then '结清91-180'\n\twhen loan_cnt >= 1 and cur_left_principal = 0 and datediff(to_date('{bizdate}','yyyymmdd'),rp.lst_repayment_date,'dd') > 180 then '结清181+'\n\twhen loan_cnt = 1 and cur_left_principal > 0 and datediff(to_date('{bizdate}','yyyymmdd'),lst_withdraw_date,'dd') <= 90 then '首借在贷（0-90）'\n\twhen cur_left_principal > 0 and datediff(to_date('{bizdate}','yyyymmdd'),lst_withdraw_date,'dd') <= 90 then '复借在贷（0-90）'\n\twhen cur_left_principal > 0 and datediff(to_date('{bizdate}','yyyymmdd'),lst_withdraw_date,'dd') <= 180\n\t\tand datediff(to_date('{bizdate}','yyyymmdd'),lst_withdraw_date,'dd') >= 91 then '在贷流失预警（91-180）'\n\twhen cur_left_principal > 0 and datediff(to_date('{bizdate}','yyyymmdd'),lst_withdraw_date,'dd') >= 181 then '在贷流失（181+）'\nend as user_type  -- 客群分类\n\n,case when is_apply = 0 then '注册未完申'\n\twhen is_apply = 1 and is_credit = 0 then '授信被拒'\n\twhen is_credit = 1 and fst_loan_date is null then '授信未支用'\n\twhen is_credit = 1 and fst_loan_date is not null and loan_cnt = 0 then '首借被拒'\n\twhen loan_cnt >= 1 and cur_left_principal = 0 then '结清'\n\twhen cur_left_principal > 0 then '在贷'\nend as user_kind  -- 客群大类\n\n,greatest(sms.lst_sms_time,rg.lst_phone_time,ai.lst_ivr_time) as lst_mkt_time  -- 最近一次信贷营销时间\n,greatest(sms.lst_sms_suc_time,rg.lst_phone_suc_time,ai.lst_ivr_suc_time) as lst_mkt_suc_time  -- 最近一次信贷营销触达时间\n,sms.lst_sms_time  -- 最近一次信贷短信发送时间\n,sms.lst_sms_suc_time  -- 最近一次营销短信触达时间\n,rg.lst_phone_time  -- 最近一次信贷电销拨打时间\n,rg.lst_phone_suc_time  -- 最近一次信贷电销接通时间\n,ai.lst_ivr_time  -- 最近一次信贷IVR拨打时间\n,ai.lst_ivr_suc_time  -- 最近一次信贷IVR接通时间\n,coalesce(sms.sms_cnt_30d,0) + coalesce(rg.phone_cnt_30d,0) + coalesce(ai.ivr_cnt_30d,0) as mkt_cnt_30d  -- 近30天信贷营销次数\n,coalesce(sms.sms_suc_cnt_30d,0) + coalesce(rg.phone_suc_cnt_30d,0) + coalesce(ai.ivr_suc_cnt_30d,0) as mkt_suc_cnt_30d  -- 近30天信贷营销触达次数\n,sms.sms_cnt_30d  -- 近30天信贷营销短信发送次数\n,sms.sms_suc_cnt_30d  -- 近30天信贷营销短信触达次数\n,rg.phone_cnt_30d  -- 近30天信贷电销拨打次数\n,rg.phone_suc_cnt_30d  -- 近30天信贷电销接通次数\n,rg.phone_time_length_30d  -- 近30天信贷电销通话时长\n,ai.ivr_cnt_30d  -- 近30天i信贷vr拨打次数\n,ai.ivr_suc_cnt_30d  -- 近30天信贷ivr接通次数\n,ai.ivr_time_length_30d  -- 近30天信贷ivr通话时长\n\n,rp.left_balance  -- 在贷余额\n,rp.cur_due_pricipal  -- 当前应还本金\n,rp.left_balance_endday  -- 在贷余额(已计入当天还款&借款)\n,rp.cur_due_pricipal_endday  -- 当前应还本金(计入当天还款&借款)\n,a.fst_loan_inner_no  -- 首借借据号\n,a.fst_loan_repayment_day  -- 首借账单日\n,e.most_freq_loan_repayment_day  -- 最常用账单日\n,a.total_loan_num  -- 历史累计借款笔数(不计入当天借款)\n,a.total_loan_num_endday  -- 历史累计借款笔数(计入当天借款)\n,a.total_settled_loan_num  -- 当前已结清借据数(不计入当天结清)\n,a.total_settled_loan_num_endday  -- 当前已结清借据数(计入当天结清)\n,rp.total_repayment_num  -- 历史累计还款次数(不计入当天还款)\n,rp.total_repayment_num_endday  -- 历史累计还款次数(计入当天还款)\n,rp.lst_repay_date  -- 最近一次还款时间(不计入当天还款)\n,rp.lst_repay_date_endday  -- 最近一次还款时间(计入当天还款)\n\n,a.activation_time  -- 激活时间\n,a.register_time_new  -- 激活后的注册时间\n,b.regi_channel  -- 一级渠道（渠道类型）_仅注册\n,b.regi_spread_way  -- 二级渠道（渠道子类型）_仅注册\n,b.regi_channel_type  -- 三级渠道（渠道名称）_仅注册\n,b.regi_register_name  -- 四级渠道（子渠道名称）_仅注册\n,b.regi_register_source  -- 子渠道编码_仅注册\n,c.operations_code_v3  -- 贷中风险分层v3\n,a2.pboc_v9_credit_apply_lvl  -- 人行分V9授信等级\n,a2.credit_acard_lvl  -- 新户风险授信分\n,case when a2.v54_score is null then '空'\n\twhen a2.v54_score >= 560 then '01.超优'\n\twhen a2.v54_score >= 500 then '02.优质'\nelse '03.一般' end as flow_score_seg_v2_1  -- 优质完申标签_v2.1\n,a2.v54_score  -- 流量分v2\n,br.bairong_score  -- 百融分\n,br.bairong_score_range  -- 百融分区间\n,a2.loan_apply_no  -- 最近一次授信申请编号\n,bc.approve_type  -- 完申流程(最近一次完申)\n,d.bind_type  -- 绑卡方式\n,d.ocr_type  -- 实名OCR方式\n\n,datediff(to_date('{bizdate}','yyyymmdd'),register_time_new,'mm') as register_mob  -- 注册mob\n,datediff(to_date('{bizdate}','yyyymmdd'),credit_approve_time,'mm') as credit_mob  -- 授信mob\n,datediff(to_date('{bizdate}','yyyymmdd'),fst_withdraw_date,'mm') as fst_withdraw_mob  -- 首借mob\n\n,hc.gmt_created_max as lst_loan_tj_time  -- 最近一次提交借款申请时间\n,hc.gmt_created_min as fst_loan_tj_time  -- 首次提交借款申请时间\n\n,ps.is_high_quality_pboc_score  -- 征信分补充优质户标签（未交叉风险分层）\n\n,bx.his_mb_policy_cnt----用户历史持有MB保单数_授信时点\n,bx.cur_mb_policy_cnt----当前在保MB保单数_授信时点\n,bx.his_jj_policy_cnt----用户历史持有JJ保单数_授信时点\n,bx.cur_jj_policy_cnt----当前在保JJ保单数_授信时点\n,bx.max_his_mb_installment----历史所有MB保单最长续期期数_授信时点\n,bx.max_cur_mb_installment----当前在保MB保单最长续期期数_授信时点\n,bx.max_his_jj_installment----历史所有JJ保单最长续期期数_授信时点\n,bx.max_cur_jj_installment----当前在保JJ保单最长续期期数_授信时点\n,bx.his_mb_renewal_cnt----用户历史MB续保成功次数_授信时点\n,bx.his_jj_renewal_cnt----用户历史JJ续保成功次数_授信时点\n\n,case when xinhu.final_score is null then 'null'\n\twhen xinhu.final_score <= 256 then 'T1'\n\twhen xinhu.final_score <= 286 then 'T2'\n\twhen xinhu.final_score <= 302 then 'T3'\n\twhen xinhu.final_score <= 317 then 'T4'\n\twhen xinhu.final_score <= 331 then 'T5'\n\twhen xinhu.final_score <= 345 then 'T6'\n\twhen xinhu.final_score <= 361 then 'T7'\n\twhen xinhu.final_score <= 380 then 'T8'\n\twhen xinhu.final_score <= 409 then 'T9'\nelse 'T10' end as xinhu_score_level  -- 新户意愿分（授信0-30）\n,case when cl.final_score is null then 'null'\n\twhen cl.final_score <= 641 then 'T1'\n\twhen cl.final_score <= 724 then 'T2'\n\twhen cl.final_score <= 769 then 'T3'\n\twhen cl.final_score <= 796 then 'T4'\n\twhen cl.final_score <= 815 then 'T5'\n\twhen cl.final_score <= 832 then 'T6'\n\twhen cl.final_score <= 850 then 'T7'\n\twhen cl.final_score <= 871 then 'T8'\n\twhen cl.final_score <= 901 then 'T9'\nelse 'T10' end as cl_score_level  -- 存量意愿分（授信30-90）\n,concat(loan_card_reg,',',p.pboc_bad_out,',',p.card_overdue_level,',',p.loan_overdue_level) as loan_card_reg\n------from songhonghui 20240523\n,datediff(fst_loan_date,register_time_new,'dd') as fst_loan_reg_period  -- 首次动支距注册时长\n,datediff(fst_withdraw_date,register_time_new,'dd') as fst_withdraw_reg_period  -- 首借距注册时长\n,datediff(fst_withdraw_date,credit_approve_time,'dd') as fst_withdraw_cre_period  -- 首借距授信时长\n,datediff(fst_apply_time,register_time_new,'mm') as fst_apply_reg_mob----首次申请距离注册MOB \n,datediff(fst_withdraw_date,register_time_new,'mm') as fst_withdraw_reg_mob---首借距离注册MOB\n,datediff(fst_withdraw_date,fst_apply_time,'mm') as fst_withdraw_credit_mob---首借距离授信MOB\n,case when fst_withdraw_date is not null then fst_withdraw_amount else 0 end as fst_withdraw_amount-- 首借金额\n,corp.policy_nums_jj\n,corp.orig_premium_jj\n,corp.policy_nums_valid_jj\n,corp.policy_nums_value_jj\n,corp.first_insure_date_jj\n,corp.last_insure_date_jj\n,corp.cancel_policy_nums_jj\n,corp.dbtb_cancel_policy_nums_jj\n,corp.rejected_policy_nums_jj\n,corp.parents_policy_nums_jj\n,corp.spouse_policy_nums_jj\n,corp.kids_policy_nums_jj\n,corp.bulk_policy_nums_jj\n,corp.first_re_insure_date_jj\n,corp.last_re_insure_date_jj\n,corp.renewal_policy_nums_jj\n,corp.xb_datediff_jj\n,corp.total_fly_policy_cnt\n,corp.last_365days_fly_policy_cnt\n,corp.last_180days_fly_policy_cnt\n,corp.last_90days_fly_policy_cnt\n,corp.last_30days_fly_policy_cnt\n,corp.last_14days_fly_policy_cnt\n,corp.last_7days_fly_policy_cnt\n,SPLIT_PART(SPLIT_PART(corp.city_phone,'_',2),'-',1) as city_phone\n,corp.typejob\n,corp.job_type\n,corp.job_income_level\n,corp.product_category_set\n,corp.policy_nums\n,corp.orig_premium\n,corp.policy_nums_valid\n,corp.policy_nums_value\n,corp.first_insure_date\n,corp.last_insure_date\n,corp.cancel_policy_nums\n,corp.parents_policy_nums\n,corp.spouse_policy_nums\n,corp.kids_policy_nums\n,corp.bulk_policy_nums\n,corp.if_xq_ever\n,corp.first_xq_dt\n,corp.last_xq_dt\n,corp.sum_pay_amt_ever\n,corp.sum_pay_amt_7d\n,corp.sum_pay_amt_30d\n,corp.sum_pay_amt_90d\n,corp.sum_pay_amt_180d\n,corp.max_installment_no\n,corp.min_installment_no\n,corp.sum_installment_no\n,corp.if_xb_ever\n,corp.first_xb_dt\n,corp.last_xb_dt\n,corp.sum_re_premium_ever\n,corp.sum_re_premium_7d\n,corp.sum_re_premium_30d\n,corp.sum_re_premium_90d\n,corp.sum_re_premium_180d\n,corp.xb_datediff\n,loan_preference\n,c.operations_code_v4\n,gps_province,phone_province,certi_province\n,a.loan_amt----历史累计放款金额\n,d.apply_platform\n,d.ip_province\n,b.utm_source_category_name-----from songhonghui 20241008渠道细类名称\n,b.channel_regroup-----from lilele 20241010渠道归拢\nfrom\n(\n\tselect user_id\n\t,certi_no\n\t,phone_no\n\t,get_idcard_sex(certi_no) as gender\n\t,get_idcard_birthday(certi_no) as birth\n\t,datediff(to_date('{bizdate}','yyyymmdd'),get_idcard_birthday(certi_no),'yyyy') as cur_age\n\t,register_time\n\t,activation_time\n\t,coalesce(activation_time,register_time) as register_time_new\n\t,max(case when loan_apply_date is not null then 1 else 0 end) as is_apply\n\t,min(loan_apply_date) as fst_apply_time\n\t,max(credit_status) as is_credit\n\n\t,max(cast(origin_credit_amount as double)) as origin_credit_amount\n\t,max(cast(credit_amount as double)) as credit_amount\n\t,max(case when credit_status = 1 then loan_apply_date end) as credit_apply_time\n\t,max(case when credit_status = 1 then loan_apply_no end) as credit_apply_no\n\t,max(case when credit_status = 1 then approve_time end) as credit_approve_time\n\t,max(case when credit_status = 1 then origin_credit_level end) as origin_credit_level\n\t,max(case when credit_status = 1 then credit_level end) as credit_level\n\t,max(case when credit_status = 1 then origin_credit_irr_rate_12 end) as origin_credit_irr_rate_12\n\t,max(case when credit_status = 1 then credit_irr_rate_12 end) as credit_irr_rate_12\n\n\t,nvl(sum(cast(cur_left_pricipal as double)),0) as cur_left_principal\n\t,max(case when cur_left_pricipal > 0 then 1 else 0 end) as is_inloan\n\t,max(overdue_days) as his_overdue_days\n\t,max(cur_overdue_days) as cur_overdue_days\n\t,min(case when loan_status = 1 then withdraw_date end) as fst_withdraw_date\n\t,min(loan_date) as fst_loan_date\n\t,max(loan_date) as lst_loan_date\n\t,max(case when loan_status = 1 then withdraw_date end) as lst_withdraw_date\n-- \t,max(case when loan_status = 1 then lst_repayment_date end) as lst_repayment_date\n\t,count(distinct case when loan_status = 1 then loan_inner_no end) as loan_cnt\n\n\t,max(case when first_loan_flag = 1 then loan_inner_no end) as fst_loan_inner_no  -- 首借借据号\n\t,max(case when first_loan_flag = 1 then day(lst_agreed_repay_date) end) as fst_loan_repayment_day  -- 首借账单日\n\t,max(case when first_loan_flag = 1 then withdraw_amount end) as fst_withdraw_amount  -- 首借金额\n\t,count(distinct case when substr(withdraw_date,1,10) <> '{bizdate,yyyy-MM-dd}' then loan_inner_no end) as total_loan_num  -- 历史累计借款笔数(不计入当天借款)\n\t,count(distinct loan_inner_no) as total_loan_num_endday  -- 历史累计借款笔数(计入当天借款)\n\t,count(distinct case when loan_settle_time is not null and substr(loan_settle_time,1,10) <> '{bizdate,yyyy-MM-dd}' then loan_inner_no end) as total_settled_loan_num  -- 历史累计结清借据数(不计入当天结清)\n\t,count(distinct case when loan_settle_time is not null then loan_inner_no end) as total_settled_loan_num_endday  -- 历史累计结清借据数(计入当天结清)\t\t\t\n\t,sum(case when loan_status = 1 then withdraw_amount end) as loan_amt----历史累计放款金额\n\tfrom za_jr_prd.adm_fin_retail_loan_dd\n\twhere pt = '{bizdate}000000'\n\tand product_code = 'JDZAD'\n\tgroup by user_id\n\t,certi_no\n\t,phone_no\n\t,register_time\n\t,activation_time\n) a\nleft join\n(  -- 是否对照组\n\tselect user_id,max(is_longterm_control_group) as is_longterm_control_group\n\tfrom za_jr_prd.adm_fin_imp_user_tag_user_info_ds\n\twhere pt = '{bizdate}000000'\n\tand product_code = 'JDZAD'\n\tgroup by user_id\n) a1\non a.user_id = a1.user_id\nleft join\n(  -- 最近一次完申\n\tselect user_id\n\t,loan_apply_no\n\t,loan_apply_date\n\t,datediff(loan_apply_date,get_idcard_birthday(certi_no),'yyyy') as apply_age\n\t,user_back_flag\n\t,is_mid_back\n\t,is_reapply\n\t,case when is_cdp_reapply = 1 then '存量可重审'\n\t\twhen is_admit_reapply = 1 then '新增可重申'\n\telse '不允许重审' end as is_can_reapply\n\t,flow_model_score_v2 as v54_score\n\t,flow_model_score as flow_score_v2\n\t,risk_score_level as cscore_level\n\t,pboc_v9_credit_apply_lvl\n\t,credit_acard_lvl\n\t,credit_operate_flag\n\n\t,row_number() over(partition by user_id order by loan_apply_date desc,credit_status desc) as apply_rk\n\tfrom za_jr_prd.adm_fin_retail_loan_dd\n\twhere pt = '{bizdate}000000'\n\tand product_code = 'JDZAD'\n) a2\non a.user_id = a2.user_id and a2.apply_rk = 1\nleft join\n(\n\tselect *\n\tfrom  za_jr_prd.adm_fin_jdzad_ad_user_channel_ds_new\n\twhere pt = max_pt('za_jr_prd.adm_fin_jdzad_ad_user_channel_ds_new')\n) b\non a.user_id = b.za_account\nleft join\n(\n\tselect a.user_id\n\t,operations_code\n\t,coalesce(a.operations_code_v3,b.operations_code_v3) as operations_code_v3\n\t,coalesce(a.operations_code_v4,c.operations_code_v4) as operations_code_v4\n\tfrom\n\t(\n\t\tselect user_id\n\t\t,max(operations_code) as operations_code\n\t\t,max(operations_code_v3) as operations_code_v3\n\t\t,max(operations_code_v4) as operations_code_v4\n\t\tfrom za_jr_prd.cdm_fin_risk_crm_ds\n\t\twhere pt = '{bizdate}000000'\n\t\tand product_code = 'JDZAD'\n\t\tgroup by user_id\n\t) a\n\tleft join\n\t(\n\t\tselect user_id\n\t\t,max(operations_code_v3) as operations_code_v3 \n\t\tfrom za_jr.temp_zad_credit_apv_90plus_fujie_operations_code_v3\n\t\twhere substr(pt,1,8) = '{bizdate}'\n\t\tgroup by user_id\n\t) b\n\ton a.user_id = b.user_id\n\t\tleft join\n\t(\n\t\tselect user_id\n\t\t,max(operations_code_v4) as operations_code_v4 \n\t\tfrom za_jr.temp_zad_credit_apv_90plus_fujie_operations_code_v4\n\t\twhere substr(pt,1,8) = '{bizdate}'\n\t\tgroup by user_id\n\t) c\n\ton a.user_id = c.user_id\n) c\non a.user_id = c.user_id\nleft join\n(\n\tselect user_id,gps_province,phone_province,certi_province\n\t,case when gps_city is not null then gps_city\n\t\twhen phone_city is not null then phone_city\n\telse certi_city end as city\n\t,case when gps_province is not null then gps_province\n\t\twhen phone_province is not null then phone_province\n\telse certi_province end as province\n\t,mp_manufacturer_flag\n\t,bind_type\n\t,ocr_type\n\t,loan_preference\n\t,ip_province\n\t,apply_platform\n    from za_jr_prd.adm_fin_jdzad_ad_user_transfer_ds\n\twhere pt = '{bizdate}000000'\n) d\non a.user_id = d.user_id\nleft join\n(\n\tselect za_caid\n\t,min(first_login_time) as fst_login_time\n\t,max(lst_login_time) as lst_login_time\n\tfrom za_jr_prd.edw_fin_retail_user_flow_ft_bak\n\twhere pt = '{bizdate}000000'\n\tand product_code = 'JDZAD'\n\tgroup by za_caid\n) l\non a.user_id = l.za_caid\nleft join\n(  -- 注销记录\n\tselect ca_id\n\t,min(gmt_modified) as gmt_modified\n\tfrom za_jr_prd.ods_fe_fin_user_info\n\twhere pt = '{bizdate}000000'\n\tand user_status = 2\n\tand is_deleted = 'N'\n\tand ca_id is not null\n\tand to_char(gmt_modified,'yyyymmdd') <= '{bizdate}'\n\tgroup by ca_id\n) pp\non a.user_id = pp.ca_id\nleft join\n(\n\tselect third_user_no as user_id\n\t,max(gmt_created) as gmt_created_max\n\t,min(gmt_created) as gmt_created_min\n\t,max(case when fund_result_code = '0164' then gmt_created end) as max_hc_time\n\t,min(case when fund_result_code = '0164' then gmt_created end) as min_hc_time\n\tfrom za_jr_prd.ods_noah_fcp_pay_order\n\twhere pt = '{bizdate}000000'\n\tand supplier_code = 'ZY'\n \tand partner_no = 'JDZAD'\n\tand sub_biz_type = 'CL'  -- 现金贷\n\tand status = 3\n-- \tand fund_result_code = '0164'\n\tgroup by third_user_no\n) hc\non a.user_id = hc.user_id\nleft join\n(select apply_no\n\t,pboc2_report_create_time\n\t,pboc2_reportno\n\t,pboc2_query_reason\n\t,pboc2_employer_seg\n\t,pboc2_edu_level\n\t,pboc2_occupation\n\t,pboc2_industry----最新行业\n\t,pboc2_marital_state\n\t,pboc_bad_out\n\t,card_overdue_level\n\t,loan_overdue_level\n\t,row_number() over(partition by apply_no order by pboc2_report_create_time desc) as pid\n\tfrom za_jr_risk.adm_fin_strategy_analysis_loanbase_pboc\n\twhere pt = max_pt('za_jr_risk.adm_fin_strategy_analysis_loanbase_pboc')\n) p\non a2.loan_apply_no = p.apply_no and p.pid = 1\nleft join\n(  -- 百融分\n\tselect user_id\n\t,bairong_score\n\t,bairong_score_range\n\tfrom za_jr_prd.adm_fin_rpt_user_tag_info_da\n\twhere pt = '{bizdate}000000'\n\tgroup by user_id,bairong_score,bairong_score_range\n) br\non a.user_id = br.user_id\nleft join\n(\n\tselect distinct apply_no_bysrc\n\t,case when is_card_back = 0 and is_ocr_back = 1 then '4.双后置'\n\t\twhen is_ocr_back = 1 and is_card_back != 0 then '3.OCR后置'\n\t\twhen is_card_back = 0 and is_ocr_back != 1 then '2.绑卡后置'\n\telse '1.全流程' end as approve_type\n\tfrom\n\t(\n\t\tselect apply_no as apply_no_bysrc\n\t\t,get_json_object(unCompress(biz_data),'$.is_ocr_houzhi_test_flag') as is_ocr_back\t--ocr后置的标识\n\t\t,get_json_object(unCompress(biz_data),'$.credit_is_bind_card') as is_card_back\t--绑卡后置的标识\n\t\tfrom za_jr_prd.ods_finance_xmagic_decision_exec_biz_context\n\t\twhere pt = max_pt('za_jr_prd.ods_finance_xmagic_decision_exec_biz_context')\n\t\tand project_code = 'XC001'\n\t) a\n) bc\non a2.loan_apply_no = bc.apply_no_bysrc\nleft join\n(\n\tselect user_id\n\t,max(call_time) as lst_phone_time\n\t,max(case when time_length > 0 then call_time end) as lst_phone_suc_time\n\t,count(case when datediff(to_date('{bizdate}','yyyymmdd'),call_time,'dd') <= 30 then call_id end) as phone_cnt_30d\n\t,count(case when datediff(to_date('{bizdate}','yyyymmdd'),call_time,'dd') <= 30 and time_length > 0 then call_id end) as phone_suc_cnt_30d\n\t,sum(case when datediff(to_date('{bizdate}','yyyymmdd'),call_time,'dd') <= 30 and time_length > 0 then time_length else 0 end) as phone_time_length_30d\n\tfrom za_jr_prd.cdm_fin_phone_mkt_dd\n\twhere pt = max_pt('za_jr_prd.cdm_fin_phone_mkt_dd')\n\tand to_char(call_time,'yyyymmdd') <= '{bizdate}'\n\tand mkt_level1 in ('信贷')\n\tand product_code = 'JDZAD'\n\tgroup by user_id\n) rg\non a.user_id = rg.user_id\nleft join\n(\n\tselect user_id\n\t,'ai_call' as mkt_type\n\t,max(send_time) as lst_ivr_time\n\t,max(case when if_market_sus = 1 then send_time end) as lst_ivr_suc_time\n\t,count(case when datediff(to_date('{bizdate}','yyyymmdd'),send_time,'dd') <= 30 then id end) as ivr_cnt_30d\n\t,count(case when datediff(to_date('{bizdate}','yyyymmdd'),send_time,'dd') <= 30 and if_market_sus = 1 then id end) as ivr_suc_cnt_30d\n\t,sum(case when datediff(to_date('{bizdate}','yyyymmdd'),send_time,'dd') <= 30 and call_duration > 0 then call_duration else 0 end) as ivr_time_length_30d\n\tfrom za_jr_prd.cdm_fin_mkt_send_dd\n\twhere pt = max_pt('za_jr_prd.cdm_fin_mkt_send_dd')\n\tand pt2 in ('outbound_abt','outbound_plat','outbound')\n\tand data_source = '金融'\n\tand to_char(send_time,'yyyymmdd') <= '{bizdate}'\n\tand mkt_level1 in ('信贷')\n\tand (product_code = 'JDZAD' or task_code in ('fcp_1607002','1047'))\n\tgroup by user_id\n) ai\non a.user_id = ai.user_id\nleft join\n(\n\tselect user_id\n\t,max(send_time) as lst_sms_time\n\t,max(case when if_market_sus = 1 then send_time end) as lst_sms_suc_time\n\t,count(case when datediff(to_date('{bizdate}','yyyymmdd'),send_time,'dd') <= 30 then id end) as sms_cnt_30d\n\t,count(case when datediff(to_date('{bizdate}','yyyymmdd'),send_time,'dd') <= 30 and if_market_sus = 1 then id end) as sms_suc_cnt_30d\n\tfrom za_jr_prd.cdm_fin_mkt_send_dd\n\twhere pt = max_pt('za_jr_prd.cdm_fin_mkt_send_dd')\n\tand pt2 = 'sms'\n\tand (content_type = '1' or (content_type = '2' and if_mkt_attr = '1'))\n\tand data_source = '金融'\n\tand to_char(send_time,'yyyymmdd') <= '{bizdate}'\n\tand mkt_level1 in ('信贷')\n\tand (product_code = 'JDZAD' or task_code in ('fcp_1607002','1047'))\n\tgroup by user_id\n) sms\non a.user_id = sms.user_id\nleft join\n(\n\tselect user_id\n\t,sum(case when datediff('{bizdate,yyyy-MM-dd}',substr(agreed_repay_date,1,10)) = 0 then due_principal  -- 不计入当天还款\n\t\t\twhen datediff('{bizdate,yyyy-MM-dd}',substr(withdraw_date,1,10)) > 0 then cur_left_pricipal  -- 不计入当天借款\n\t\telse 0 end) as left_balance  -- 在贷余额(未减去当天还款&借款)  \n\t,sum(case when datediff('{bizdate,yyyy-MM-dd}',substr(agreed_repay_date,1,10)) = 0 then due_principal\n\t\t\twhen datediff('{bizdate,yyyy-MM-dd}',substr(agreed_repay_date,1,10)) > 0 then cur_left_pricipal else 0 end) as cur_due_pricipal  -- 当前应还款额(未计入当天还款)\n\t,nvl(sum(cur_left_pricipal),0) as left_balance_endday\n\t,sum(case when datediff('{bizdate,yyyy-MM-dd}',substr(agreed_repay_date,1,10)) >= 0 then cur_left_pricipal else 0 end) as cur_due_pricipal_endday\n\t,sum(case when actual_repayment_time is not null and substr(actual_repayment_time,1,10) <> '{bizdate,yyyy-MM-dd}' then 1 else 0 end) as total_repayment_num  -- 历史累计还款次数\n\t,sum(case when actual_repayment_time is not null then 1 else 0 end) as total_repayment_num_endday  -- 历史累计还款次数\n\t,max(actual_repayment_time) as lst_repayment_date\n\t,max(case when substr(actual_repayment_time,1,10) <> '{bizdate,yyyy-MM-dd}' then actual_repayment_time end) as lst_repay_date  -- 最近一次还款时间(不计入当天还款)\n\t,max(actual_repayment_time) as lst_repay_date_endday  -- 最近一次还款时间(计入当天还款)\n\n\tfrom za_jr_prd.cdm_fin_repayment_plan\n\twhere pt = '{bizdate,yyyyMMdd}000000'\n\tand product_id = '1510006902'\n\tgroup by user_id\n) rp\non a.user_id = rp.user_id\nleft join\n(  -- e表:历史最常用账单日\n\tselect user_id\n\t,repayment_day as most_freq_loan_repayment_day  -- 最常用账单日\n\t,row_number() over(partition by user_id order by repayment_day_cnt desc) as repayment_day_rnk\n\tfrom\n\t(\n\t\tselect user_id\n\t\t,day(lst_agreed_repay_date) as repayment_day  -- 账单日\n\t\t,count(distinct loan_inner_no) as repayment_day_cnt\n\t\tfrom za_jr_prd.adm_fin_retail_loan_dd \n\t\twhere pt = '{bizdate}000000'\n\t\tand product_code = 'JDZAD'\n\t\tand loan_status = 1\n\t\tgroup by user_id,day(lst_agreed_repay_date)\n\t) a\n) e\non a.user_id = e.user_id and e.repayment_day_rnk = 1\nleft join\n(\n    select product_date\n    ,certi_no\n    ,case when second_score>=800 and last_score>=800 and score>=800 then 1  -- 连续三个月800分以上\n        when score>=600 and score-last_score>50 then 1  -- 本月高分且本月比上个月高50分以上\n    else 0 end as is_high_quality_pboc_score\n    ,row_number() over(partition by certi_no order by product_date desc) as rk\n    from\n    (\n    \tselect idnum as certi_no\n    \t,score\n    \t,position\n    \t,to_date(productdate,'yyyy-mm-dd') as product_date  -- 查询时间\n    \t,lag(score) over(partition by idnum order by productdate) as last_score\n    \t,lag(score,2) over(partition by idnum order by productdate) as second_score\n    \t,max(score) over(partition by idnum order by productdate rows between 2 preceding and current row) as his_max_score\n    \tfrom za_jr_prd.ods_frcb_fin_datasupport_digitization_query_ext_result\n    \twhere pt = max_pt('za_jr_prd.ods_frcb_fin_datasupport_digitization_query_ext_result')\n    \tand servicecode = 'FW_PF_0018'\n    \tand score <> ''\n    \tgroup by idnum,productdate,position,score\n    ) a\n    where datediff(to_date('{bizdate}','yyyymmdd'),product_date,'mm') <= 2\n) ps\non a.certi_no = ps.certi_no and ps.rk = 1\nleft join bx_info bx\non a.user_id = bx.user_id\nleft join\n(\n\tselect distinct user_id,final_score\n\tfrom za_jr_prd.adm_xinhu_dongzhi_model_score_v2\n\twhere pt >= '20231123000000'\n\tand pt <= '{bizdate}000000'\n) xinhu\non a.user_id = xinhu.user_id\nleft join\n(\n\tselect distinct user_id,final_score\n\tfrom za_jr_prd.adm_sxsm_dongzhi_model_score_v2\n\twhere pt = '{bizdate}000000'\n) cl\non a.user_id = cl.user_id\nleft outer join \n(select distinct loan_apply_no,loan_card_reg from za_jr.ys_org_type_flag4_def)c2 on a2.loan_apply_no=c2.loan_apply_no\n--到 user_id 粒度取用户最新授信或最新支用时点的集团保险标签数据\nleft join (select *,  row_number() over(partition by user_id order by biz_date desc) as rn\n           from corp_info\n          ) corp on corp.user_id=a.user_id and corp.rn=1\n;\n`;\n","import { create } from 'zustand';\n\nexport const useSqlStore = create(() => ({\n  highlightWords: [], // 高亮词\n}));\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Select, Space, Button } from 'antd';\nimport AceEditor, { IAceEditorProps } from 'react-ace';\nimport { Range } from 'ace-builds';\nimport 'ace-builds/webpack-resolver';\nimport 'ace-builds/src-noconflict/theme-github';\nimport 'ace-builds/src-noconflict/theme-chrome';\nimport 'ace-builds/src-noconflict/theme-tomorrow';\nimport 'ace-builds/src-noconflict/mode-mysql';\nimport './index.less';\nimport { data } from './mock';\nimport { useSqlStore } from '@/models/sql';\n\ninterface ICodeEditor extends IAceEditorProps {\n  disabled?: boolean;\n}\n\nexport default React.forwardRef((props: ICodeEditor) => {\n  const { mode, height, width, name, theme, placeholder, value, onChange, disabled = false, ...rest } = props;\n  const editorRef = useRef<AceEditor>(null);\n  const [loading, setLoading] = useState(false);\n  const highlightWords = useSqlStore((state) => state.highlightWords);\n\n  const handleClick = () => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 3000);\n  };\n\n  const handleHighlightWords = (words: string[]) => {\n    const editor = editorRef.current?.editor;\n    if (!editor) return;\n\n    const session = editor.getSession();\n\n    // 清除现有的 markers\n    const markers = session.getMarkers();\n    Object.keys(markers).forEach((key) => {\n      if (markers[key].clazz === 'highlight-marker') {\n        session.removeMarker(markers[key].id);\n      }\n    });\n\n    // 为每个单词添加新的 marker\n    words.forEach((word) => {\n      const content = session.getValue();\n      let match;\n      const regex = new RegExp(word, 'g');\n\n      while ((match = regex.exec(content)) !== null) {\n        const startPosition = session.doc.indexToPosition(match.index, 0);\n        const endPosition = session.doc.indexToPosition(match.index + word.length, 0);\n        const range = new Range(startPosition.row, startPosition.column, endPosition.row, endPosition.column);\n        session.addMarker(range, 'highlight-marker', 'text');\n      }\n    });\n  };\n\n  useEffect(() => {\n    handleHighlightWords(highlightWords);\n  }, [highlightWords]);\n\n  return (\n    <div className=\"code-editor\">\n      <div className=\"code-editor-tool\">\n        <Space>\n          <Select\n            style={{\n              width: 200,\n            }}\n            defaultValue=\"mysql\"\n          />\n          <Button loading={loading} onClick={handleClick}>\n            执行\n          </Button>\n        </Space>\n      </div>\n      <AceEditor\n        ref={editorRef}\n        width=\"100%\"\n        mode=\"mysql\"\n        theme=\"tomorrow\"\n        placeholder=\"\"\n        onChange={onChange}\n        name=\"ace-editor\"\n        value={data}\n        editorProps={{ $blockScrolling: true }}\n        fontSize={14}\n        showGutter // 显示行号\n        highlightActiveLine\n        showPrintMargin={false}\n        setOptions={{\n          enableBasicAutocompletion: true, // 启用基本自动完成功能\n          enableLiveAutocompletion: true, // 启用实时自动完成功能 （比如：智能代码提示）\n          enableSnippets: true, // 启用代码段\n          showLineNumbers: true,\n          showGutter: true,\n          tabSize: 2,\n          useWorker: false,\n        }}\n        readOnly={disabled}\n        debounceChangePeriod={500} // 防抖时间\n        {...rest}\n      />\n    </div>\n  );\n});\n","import React from 'react';\nimport ReactJson from 'react-json-view';\nimport mockJson from './mock.json';\n\nfunction ReactJsonView() {\n  return <ReactJson src={mockJson} collapsed={3} iconStyle=\"square\" theme=\"monokai\" />;\n}\n\nexport default ReactJsonView;\n","import { Graph } from '@antv/x6';\nimport { COLOR_MAP, LINE_HEIGHT, NODE_WIDTH } from './SqlFlowView';\n\nexport const initGraph = () => {\n  Graph.registerPortLayout(\n    'erPortPosition',\n    (portsPositionArgs) => {\n      return portsPositionArgs.map((_, index) => {\n        return {\n          position: {\n            x: 0,\n            y: (index + 1) * LINE_HEIGHT,\n          },\n          angle: 0,\n        };\n      });\n    },\n    true,\n  );\n\n  Graph.registerNode(\n    'sourceTable',\n    {\n      inherit: 'rect',\n      markup: [\n        {\n          tagName: 'rect',\n          selector: 'body',\n          attrs: {\n            cursor: 'pointer',\n          },\n        },\n        {\n          tagName: 'text',\n          selector: 'label',\n          attrs: {\n            cursor: 'pointer',\n          },\n        },\n      ],\n      attrs: {\n        rect: {\n          strokeWidth: 1,\n          stroke: COLOR_MAP.sourceTable.primary,\n          fill: COLOR_MAP.sourceTable.primary,\n        },\n        label: {\n          fontWeight: 'bold',\n          fill: COLOR_MAP.fontColor,\n          fontSize: 12,\n        },\n      },\n      ports: {\n        groups: {\n          list: {\n            markup: [\n              {\n                tagName: 'rect',\n                selector: 'portBody',\n              },\n              {\n                tagName: 'text',\n                selector: 'portNameLabel',\n              },\n              {\n                tagName: 'text',\n                selector: 'portTypeLabel',\n              },\n            ],\n            attrs: {\n              portBody: {\n                width: NODE_WIDTH,\n                height: LINE_HEIGHT,\n                strokeWidth: 1,\n                stroke: COLOR_MAP.sourceTable.primary,\n                fill: COLOR_MAP.sourceTable.bg,\n                magnet: true,\n              },\n              portNameLabel: {\n                ref: 'portBody',\n                refX: 6,\n                refY: 6,\n                fontSize: 10,\n              },\n              portTypeLabel: {\n                ref: 'portBody',\n                refX: 95,\n                refY: 6,\n                fontSize: 10,\n              },\n            },\n            position: 'erPortPosition',\n          },\n        },\n      },\n    },\n    true,\n  );\n\n  Graph.registerNode(\n    'targetTable',\n    {\n      inherit: 'rect',\n      markup: [\n        {\n          tagName: 'rect',\n          selector: 'body',\n          attrs: {\n            cursor: 'pointer',\n          },\n        },\n        {\n          tagName: 'text',\n          selector: 'label',\n          attrs: {\n            cursor: 'pointer',\n          },\n        },\n      ],\n      attrs: {\n        rect: {\n          strokeWidth: 1,\n          stroke: COLOR_MAP.targetTable.primary,\n          fill: COLOR_MAP.targetTable.primary,\n        },\n        label: {\n          fontWeight: 'bold',\n          fill: COLOR_MAP.fontColor,\n          fontSize: 12,\n        },\n      },\n      ports: {\n        groups: {\n          list: {\n            markup: [\n              {\n                tagName: 'rect',\n                selector: 'portBody',\n              },\n              {\n                tagName: 'text',\n                selector: 'portNameLabel',\n              },\n              {\n                tagName: 'text',\n                selector: 'portTypeLabel',\n              },\n            ],\n            attrs: {\n              portBody: {\n                width: NODE_WIDTH,\n                height: LINE_HEIGHT,\n                strokeWidth: 1,\n                stroke: COLOR_MAP.targetTable.primary,\n                fill: COLOR_MAP.targetTable.bg,\n                magnet: true,\n              },\n              portNameLabel: {\n                ref: 'portBody',\n                refX: 6,\n                refY: 6,\n                fontSize: 10,\n              },\n              portTypeLabel: {\n                ref: 'portBody',\n                refX: 95,\n                refY: 6,\n                fontSize: 10,\n              },\n            },\n            position: 'erPortPosition',\n          },\n        },\n      },\n    },\n    true,\n  );\n\n  Graph.registerNode(\n    'selectColumns',\n    {\n      inherit: 'rect',\n      markup: [\n        {\n          tagName: 'rect',\n          selector: 'body',\n          attrs: {\n            cursor: 'pointer',\n          },\n        },\n        {\n          tagName: 'text',\n          selector: 'label',\n          attrs: {\n            cursor: 'pointer',\n          },\n        },\n      ],\n      attrs: {\n        rect: {\n          strokeWidth: 1,\n          stroke: COLOR_MAP.selectColumns.primary,\n          fill: COLOR_MAP.selectColumns.primary,\n        },\n        label: {\n          fontWeight: 'bold',\n          fill: COLOR_MAP.fontColor,\n          fontSize: 12,\n        },\n      },\n      ports: {\n        groups: {\n          list: {\n            markup: [\n              {\n                tagName: 'rect',\n                selector: 'portBody',\n              },\n              {\n                tagName: 'text',\n                selector: 'portNameLabel',\n              },\n              {\n                tagName: 'text',\n                selector: 'portTypeLabel',\n              },\n            ],\n            attrs: {\n              portBody: {\n                width: NODE_WIDTH,\n                height: LINE_HEIGHT,\n                strokeWidth: 1,\n                stroke: COLOR_MAP.selectColumns.primary,\n                fill: COLOR_MAP.selectColumns.bg,\n                magnet: true,\n              },\n              portNameLabel: {\n                ref: 'portBody',\n                refX: 6,\n                refY: 6,\n                fontSize: 10,\n              },\n              portTypeLabel: {\n                ref: 'portBody',\n                refX: 95,\n                refY: 6,\n                fontSize: 10,\n              },\n            },\n            position: 'erPortPosition',\n          },\n        },\n      },\n    },\n    true,\n  );\n\n  Graph.registerNode(\n    'viewTable',\n    {\n      inherit: 'rect',\n      markup: [\n        {\n          tagName: 'rect',\n          selector: 'body',\n          attrs: {\n            cursor: 'pointer',\n          },\n        },\n        {\n          tagName: 'text',\n          selector: 'label',\n          attrs: {\n            cursor: 'pointer',\n          },\n        },\n      ],\n      attrs: {\n        rect: {\n          strokeWidth: 1,\n          stroke: COLOR_MAP.viewTable.primary,\n          fill: COLOR_MAP.viewTable.primary,\n        },\n        label: {\n          fontWeight: 'bold',\n          fill: COLOR_MAP.fontColor,\n          fontSize: 12,\n        },\n      },\n      ports: {\n        groups: {\n          list: {\n            markup: [\n              {\n                tagName: 'rect',\n                selector: 'portBody',\n              },\n              {\n                tagName: 'text',\n                selector: 'portNameLabel',\n              },\n              {\n                tagName: 'text',\n                selector: 'portTypeLabel',\n              },\n            ],\n            attrs: {\n              portBody: {\n                width: NODE_WIDTH,\n                height: LINE_HEIGHT,\n                strokeWidth: 1,\n                stroke: COLOR_MAP.viewTable.primary,\n                fill: COLOR_MAP.viewTable.bg,\n                magnet: true,\n              },\n              portNameLabel: {\n                ref: 'portBody',\n                refX: 6,\n                refY: 6,\n                fontSize: 10,\n              },\n              portTypeLabel: {\n                ref: 'portBody',\n                refX: 95,\n                refY: 6,\n                fontSize: 10,\n              },\n            },\n            position: 'erPortPosition',\n          },\n        },\n      },\n    },\n    true,\n  );\n};\n","import { Graph, Cell } from '@antv/x6';\nimport { DagreLayout } from '@antv/layout';\nimport result3 from './result3.json';\nimport { useEffect, useRef } from 'react';\nimport { initGraph } from './logic';\nimport { useSqlStore } from '@/models/sql';\n\nexport const LINE_HEIGHT = 24;\nexport const NODE_WIDTH = 150;\nexport const COLOR_MAP = {\n  fontColor: '#ffffff',\n  hoverBg: '#e5c2ff',\n  activeBg: '#1febf6',\n  defaultBg: '#ebfdec',\n  defaultEdge: '#A2B1C3',\n  sourceTable: {\n    primary: '#fa541c',\n    bg: '#fff2e8',\n  },\n  targetTable: {\n    primary: '#a0d911',\n    bg: '#fcffe6',\n  },\n  selectColumns: {\n    primary: '#1677ff',\n    bg: '#e6f4ff',\n  },\n  viewTable: {\n    primary: '#eb2f96',\n    bg: '#fff0f6',\n  },\n};\n\ninitGraph();\n\nfunction SqlFlowView2() {\n  const graphRef = useRef<Graph>();\n  const init = () => {\n    graphRef.current = new Graph({\n      container: document.getElementById('container')!,\n      autoResize: true,\n      panning: true,\n      interacting: {\n        nodeMovable: true, // 节点是否可以被移动\n        vertexAddable: false, // 边的路径点是否可以被删除\n        vertexDeletable: false, // 是否可以添加边的路径点\n        vertexMovable: false, // 边的路径点是否可以被移动\n        arrowheadMovable: false, // 边的起始/终止箭头（在使用 arrowhead 工具后）是否可以被移动\n        edgeLabelMovable: false, // 边的标签是否可以被移动\n        edgeMovable: false, // 边是否可以被移动\n        magnetConnectable: false, // 当在具有 magnet 属性的元素上按下鼠标开始拖动时，是否触发连线交互。\n      },\n      mousewheel: true,\n      connecting: {\n        router: {\n          name: 'er',\n          args: {\n            offset: 25,\n            direction: 'H',\n          },\n        },\n      },\n    });\n\n    generate();\n  };\n\n  const generate = () => {\n    const cells: Cell[] = [];\n    const res1 = result3.source.map((item, index) => {\n      return {\n        id: item.name,\n        shape: item.type,\n        label: item.name,\n        width: 150,\n        height: 24,\n        ports: item.columns.map((_item) => ({\n          id: item.name + '_' + _item,\n          group: 'list',\n          attrs: {\n            portNameLabel: {\n              text: _item,\n            },\n          },\n        })),\n      };\n    });\n    const res2 = result3.statements.map((item, index) => {\n      return [\n        ...item?.mappings.map((_item, _index) => {\n          return {\n            id: index + '-' + _index,\n            shape: 'edge',\n            source: {\n              cell: item.source,\n              port: item.source + '_' + _item.sourceColumn,\n            },\n            target: {\n              cell: item.target,\n              port: item.target + '_' + _item.targetColumn,\n            },\n            connector: { name: 'rounded' },\n            attrs: {\n              line: {\n                stroke: COLOR_MAP.defaultEdge,\n                strokeWidth: 1,\n                // sourceMarker: {\n                //   name: 'circle',\n                //   size: 2,\n                // },\n                targetMarker: {\n                  name: 'classic',\n                  size: 6,\n                },\n              },\n            },\n            zIndex: 0,\n          };\n        }),\n      ];\n    });\n\n    [...res1, ...res2.flat(Infinity)].forEach((item: any) => {\n      if (item.shape === 'edge') {\n        cells.push(graphRef.current.createEdge(item));\n      } else {\n        cells.push(graphRef.current.createNode(item));\n      }\n    });\n\n    // 渲染图形\n    graphRef.current.resetCells(cells);\n    graphRef.current.centerPoint();\n    applyDagreLayout(graphRef.current);\n  };\n  const applyDagreLayout = (graph: Graph) => {\n    const nodes = graph.getNodes();\n    const edges = graph.getEdges();\n\n    const dagreLayout = new DagreLayout({\n      type: 'dagre',\n      rankdir: 'LR',\n      align: 'UL',\n      ranksep: 100,\n      nodesep: 100,\n      controlPoints: true,\n    });\n\n    const model = {\n      nodes: nodes.map((node) => ({\n        id: node.id,\n        width: node.size().width,\n        height: node.size().height,\n      })),\n      edges: edges.map((edge) => ({\n        source: edge.getSourceCellId(),\n        target: edge.getTargetCellId(),\n      })),\n    };\n\n    const newPositions = dagreLayout.layout(model);\n\n    newPositions.nodes.forEach((node) => {\n      const cell = graph.getCellById(node.id);\n      if (cell.isNode()) {\n        // @ts-ignore\n        cell.setPosition(node.x, node.y);\n      }\n    });\n\n    graph.centerPoint();\n  };\n  const handlePortMouseEnter = ({ node, view, cell, port }) => {\n    console.log('handlePortMouseEnter', node, view, port);\n    useSqlStore.setState({\n      highlightWords: ['product_code', 'policy_no', 'user_id'],\n    });\n    cell.setPortProp(port, 'attrs/rect', {\n      fill: COLOR_MAP.hoverBg,\n    });\n    const connectedEdges = graphRef.current.getConnectedEdges(cell, { incoming: true, outgoing: true }).filter((edge) => edge.getSourcePortId() === port || edge.getTargetPortId() === port);\n    connectedEdges.forEach((edge) => {\n      // 高亮边\n      edge.attr('line/stroke', COLOR_MAP.hoverBg);\n\n      // 高亮边的源端口和目标端口\n      const sourceCell = edge.getSourceCell();\n      const targetCell = edge.getTargetCell();\n      const sourcePort = edge.getSourcePortId();\n      const targetPort = edge.getTargetPortId();\n\n      if (sourceCell && sourcePort && sourceCell.isNode()) {\n        sourceCell.setPortProp(sourcePort, 'attrs/rect', {\n          fill: COLOR_MAP.hoverBg,\n        });\n      }\n\n      if (targetCell && targetPort && targetCell.isNode()) {\n        targetCell.setPortProp(targetPort, 'attrs/rect', {\n          fill: COLOR_MAP.hoverBg,\n        });\n      }\n    });\n  };\n\n  const handlePortMouseLeave = ({ cell, port, node }) => {\n    console.log('handlePortMouseLeave');\n    useSqlStore.setState({\n      highlightWords: [],\n    });\n    cell.setPortProp(port, 'attrs/rect', {\n      fill: COLOR_MAP[node.shape].bg,\n    });\n\n    // 获取与当前端口相连的所有边\n    const connectedEdges = graphRef.current.getConnectedEdges(cell, { incoming: true, outgoing: true }).filter((edge) => edge.getSourcePortId() === port || edge.getTargetPortId() === port);\n\n    connectedEdges.forEach((edge) => {\n      // 恢复边的颜色\n      edge.attr('line/stroke', COLOR_MAP.defaultEdge); // 假设默认边的颜色是黑色，根据实际情况调整\n\n      // 恢复边的源端口和目标端口颜色\n      const sourceCell = edge.getSourceCell();\n      const targetCell = edge.getTargetCell();\n      const sourcePort = edge.getSourcePortId();\n      const targetPort = edge.getTargetPortId();\n\n      const sourceNode = edge.getSourceNode();\n      const targetNode = edge.getTargetNode();\n\n      if (sourceCell && sourcePort && sourceCell.isNode()) {\n        sourceCell.setPortProp(sourcePort, 'attrs/rect', {\n          fill: COLOR_MAP[sourceNode.shape].bg,\n        });\n      }\n\n      if (targetCell && targetPort && targetCell.isNode()) {\n        targetCell.setPortProp(targetPort, 'attrs/rect', {\n          fill: COLOR_MAP[targetNode.shape].bg,\n        });\n      }\n    });\n  };\n\n  const handlePortClick = ({ cell, port }) => {\n    console.log('handlePortClick');\n    cell.setPortProp(port, 'attrs/rect', {\n      fill: COLOR_MAP.activeBg,\n    });\n  };\n\n  const handleGraphMouseEnter = (e) => {\n    console.log('handleGraphMouseEnter');\n    useSqlStore.setState({\n      highlightWords: [],\n    });\n    const cells = graphRef.current.getCells();\n    cells.forEach((c) => {\n      if (c.isNode()) {\n        const ports = c.getPorts();\n        ports.forEach((p) => {\n          c.setPortProp(p.id, 'attrs/rect', {\n            fill: COLOR_MAP[c.shape].bg,\n          });\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  useEffect(() => {\n    console.log('注册');\n    graphRef.current.on('node:port:mouseenter', handlePortMouseEnter);\n    graphRef.current.on('node:port:mouseleave', handlePortMouseLeave);\n    // graphRef.current.on('node:port:click', handlePortClick);\n    graphRef.current.on('graph:mouseenter', handleGraphMouseEnter);\n\n    return () => {\n      graphRef.current.off('node:port:mouseenter', handlePortMouseEnter);\n      graphRef.current.off('node:port:mouseleave', handlePortMouseLeave);\n      // graphRef.current.off('node:port:click', handlePortClick);\n      graphRef.current.off('graph:mouseenter', handleGraphMouseEnter);\n    };\n  }, []);\n\n  return (\n    <div\n      style={{\n        width: '100%',\n        height: '100%',\n      }}\n    >\n      <div id=\"container\" />\n    </div>\n  );\n}\n\nexport default SqlFlowView2;\n","import { Tabs } from 'antd';\nimport type { TabsProps } from 'antd';\nimport ReactJsonView from './ReactJsonView';\nimport SqlFlowView from './SqlFlowView';\nimport './index.less';\nimport { useState } from 'react';\n\nfunction SqlFlow() {\n  const [tab, setTab] = useState('1');\n\n  const onChange = (key: string) => {\n    setTab(key);\n  };\n  const items: TabsProps['items'] = [\n    {\n      key: '1',\n      label: 'SQL-FLOW',\n    },\n    {\n      key: '2',\n      label: 'JSON',\n    },\n  ];\n  return (\n    <div className=\"sql-flow\">\n      <div className=\"sql-flow-tool\">\n        <Tabs items={items} activeKey={tab} onChange={onChange} />\n      </div>\n      {tab === '1' && <SqlFlowView />}\n      {tab === '2' && <ReactJsonView />}\n    </div>\n  );\n}\n\nexport default SqlFlow;\n","import { Splitter } from 'antd';\nimport CodeEditor from './components/CodeEditor';\nimport SqlFlow from './components/SqlFlow';\nimport './index.less';\n\nfunction Home() {\n  return (\n    <div className=\"home\">\n      <Splitter>\n        <Splitter.Panel defaultSize=\"30%\" min=\"30%\" max=\"70%\">\n          <CodeEditor />\n        </Splitter.Panel>\n        <Splitter.Panel>\n          <SqlFlow />\n        </Splitter.Panel>\n      </Splitter>\n    </div>\n  );\n}\n\nexport default Home;\n"],"names":["data","useSqlStore","create","highlightWords","React","props","mode","height","width","name","theme","placeholder","value","onChange","_props$disabled","disabled","rest","_objectWithoutProperties","_excluded","editorRef","useRef","_useState","useState","_useState2","_slicedToArray","loading","setLoading","state","handleClick","setTimeout","handleHighlightWords","words","_editorRef$current","editor","current","session","getSession","markers","getMarkers","Object","keys","forEach","key","clazz","removeMarker","id","word","content","getValue","match","regex","RegExp","exec","startPosition","doc","indexToPosition","index","endPosition","length","range","Range","row","column","addMarker","useEffect","_jsxs","className","children","_jsx","Space","Select","style","defaultValue","Button","onClick","AceEditor","_objectSpread","ref","editorProps","$blockScrolling","fontSize","showGutter","highlightActiveLine","showPrintMargin","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","useWorker","readOnly","debounceChangePeriod","ReactJsonView","ReactJson","src","mockJson","collapsed","iconStyle","initGraph","Graph","registerPortLayout","portsPositionArgs","map","_","position","x","y","LINE_HEIGHT","angle","registerNode","inherit","markup","tagName","selector","attrs","cursor","rect","strokeWidth","stroke","COLOR_MAP","sourceTable","primary","fill","label","fontWeight","fontColor","ports","groups","list","portBody","NODE_WIDTH","bg","magnet","portNameLabel","refX","refY","portTypeLabel","targetTable","selectColumns","viewTable","hoverBg","activeBg","defaultBg","defaultEdge","SqlFlowView2","graphRef","init","container","document","getElementById","autoResize","panning","interacting","nodeMovable","vertexAddable","vertexDeletable","vertexMovable","arrowheadMovable","edgeLabelMovable","edgeMovable","magnetConnectable","mousewheel","connecting","router","args","offset","direction","generate","cells","res1","result3","item","shape","type","columns","_item","group","text","res2","_toConsumableArray","mappings","_index","source","cell","port","sourceColumn","target","targetColumn","connector","line","targetMarker","size","zIndex","concat","flat","Infinity","push","createEdge","createNode","resetCells","centerPoint","applyDagreLayout","graph","nodes","getNodes","edges","getEdges","dagreLayout","DagreLayout","rankdir","align","ranksep","nodesep","controlPoints","model","node","edge","getSourceCellId","getTargetCellId","newPositions","layout","getCellById","isNode","setPosition","handlePortMouseEnter","_ref","view","console","log","setState","setPortProp","connectedEdges","getConnectedEdges","incoming","outgoing","filter","getSourcePortId","getTargetPortId","attr","sourceCell","getSourceCell","targetCell","getTargetCell","sourcePort","targetPort","handlePortMouseLeave","_ref2","sourceNode","getSourceNode","targetNode","getTargetNode","handlePortClick","_ref3","handleGraphMouseEnter","e","getCells","c","getPorts","p","on","off","SqlFlow","tab","setTab","items","Tabs","activeKey","SqlFlowView","Home","Splitter","Panel","defaultSize","min","max","CodeEditor"],"sourceRoot":""}